library(bayesutils)
dat <- list(
n     = 10,  # Data
s     = 4,   # Data
mu    = 0,   # Hyper param for logit-normal prior
sigma = 1.25 # Hyper param for logit-normal prior
)
inits <- function (){
list(theta=rnorm(1))
}
fit <- jags(data=dat,
inits=inits,
parameters.to.save = c("ppi"),
n.iter=20000, n.burnin = 500, n.thin = 10,
n.chains=4,
model.file=system.file("jags/binomial-logitnorm.bug.R", package = "bayesutils"))
fit <- jags(data=dat,
inits=inits,
parameters.to.save = c("ppi"),
n.iter=20000, n.burnin = 500, n.thin = 10,
n.chains=4,
model.file=system.file("jags/binomial-logitnormal.bug.R", package = "bayesutils"))
system.file("jags/T-norm_T_multiple.bug.R", package = "bayesutils"))
system.file("jags/T-norm_T_multiple.bug.R", package = "bayesutils")
system.file("jags/binomial-logitnormal.bug.R", package = "bayesutils")
system.file("jags/binomial_logitnormal.bug.R", package = "bayesutils")
fit <- jags(data=dat,
inits=inits,
parameters.to.save = c("ppi"),
n.iter=20000, n.burnin = 500, n.thin = 10,
n.chains=4,
model.file=system.file("jags/binomial_logitnormal.bug.R", package = "bayesutils"))
fit
# Examine chains trace and autocorrelation:
params.chains <- extract.params(fit, by.chainQ = T)
mcmc_trace(params.chains, pars =c("ppi"))
autocorrelation.plots(params.chains, pars = c("ppi"))
# Examine posterior
params.mat <- extract.params(fit, as.matrixQ = T)
mcmc_areas(params.mat, pars =c("ppi"), prob = 0.95)
ppi <- params.mat$ppi
parameter.intervals(ppi, plotQ = T)
parameter.intervals(ppi, plotQ = T)
parameter.intervals(ppi, plotQ = T)
parameter.intervals(ppi, plotQ = T)
library(bayesutils)
# Extra options to set for Stan:
options(mc.cores = 1)
rstan_options(auto_write = TRUE)
stan.code   <- paste(readLines(system.file("stan/binomial_logitnormal.stan", package = "bayesutils")),collapse='\n')
# Translate Stan code into C++
model.c <- stanc(model_code = stan.code, model_name = 'model', verbose = T)
# Compile the Stan C++ model:
sm <- stan_model(stanc_ret = model.c, verbose = T)
# Experimental sample for flipping this coin:
n <- 10     # Number of flips per experiment
s <- 4      # Number of heads observed
dat <- list(
n     = n,
s     = s,
mu    = 0,   # Hyper param for logit-normal prior
sigma = 1.25 # Hyper param for logit-normal prior
)
#Run the model:
fit <- sampling(sm, data = dat, iter=5000, thin = 1, chains = 4)
fit
# Examine posterior
params.mat <- extract.params(fit, as.matrixQ = T)
mcmc_areas(params.mat, pars =c("ppi"), prob = 0.95)
ppi <- params.mat$ppi
parameter.intervals(ppi, plotQ = T)
